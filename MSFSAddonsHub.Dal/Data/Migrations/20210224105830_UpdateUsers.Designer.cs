// <auto-generated />
using System;
using MSFSAddonsHub.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MSFSAddonsHub.Dal.Data.Migrations
{
    [DbContext(typeof(MSFSAddonDBContext))]
    [Migration("20210224105830_UpdateUsers")]
    partial class UpdateUsers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MSFSAddons.Models.AirPort", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ICAO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("LatY")
                        .HasColumnType("decimal(18,9)");

                    b.Property<decimal?>("LongX")
                        .HasColumnType("decimal(18,9)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Airport");
                });

            modelBuilder.Entity("MSFSAddons.Models.Badges", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BadgeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BadgePoints")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TeannatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Badges");
                });

            modelBuilder.Entity("MSFSAddons.Models.Notifications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FolderId")
                        .HasColumnType("int");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FromUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MessageBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TeannatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ToUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("isRead")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("MSFSAddons.Models.SubscriptionTeirs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ClubId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desciption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Enabled")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubscriptionTeirsTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("SubscriptionTypesBalancesId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isBlocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("SubscriptionTeirsTypeId");

                    b.HasIndex("SubscriptionTypesBalancesId");

                    b.HasIndex("UserId");

                    b.ToTable("SubscriptionTeirs");
                });

            modelBuilder.Entity("MSFSAddons.Models.SubscriptionTierTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClubId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TeannatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserIdId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isBlocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("UserIdId");

                    b.ToTable("SubscriptionTierTypes");
                });

            modelBuilder.Entity("MSFSAddons.Models.SubscriptionTypesBalances", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AircraftsAllowed")
                        .HasColumnType("int");

                    b.Property<int?>("ClubId")
                        .HasColumnType("int");

                    b.Property<int?>("ClubsAllowed")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DownloadsAllowed")
                        .HasColumnType("int");

                    b.Property<int?>("EventsAllowed")
                        .HasColumnType("int");

                    b.Property<int?>("FlightsAllowed")
                        .HasColumnType("int");

                    b.Property<int?>("ModsAllowed")
                        .HasColumnType("int");

                    b.Property<Guid?>("TeannatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserIdId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("UserIdId");

                    b.ToTable("SubscriptionTypesBalances");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AvatarImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ClubId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GamerTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TennantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("UserType")
                        .HasColumnType("int");

                    b.Property<string>("UserTypeText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isOnline")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "7796F3F2-5600-40A8-99B4-832EE57DC7E1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "74a78786-7be3-458c-b7e8-e34c951a41dd",
                            Email = "test1@msfsaddonshub.com",
                            EmailConfirmed = true,
                            FirstName = "Martha",
                            LastName = "Jones",
                            LockoutEnabled = false,
                            NormalizedEmail = "test1@msfsaddonshub.com",
                            NormalizedUserName = "test1@msfsaddonshub.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEPLyVSnTB1sUzsy0aJgqkgACoJd9M4HxEz8Y5y1MtM5lIJNhyr/K8nVqqKlhCDas/w==",
                            PhoneNumber = "XXXXXXXXXXXXX",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "00000000-0000-0000-0000-000000000000",
                            TwoFactorEnabled = false,
                            UserName = "test1@msfsaddonshub.com",
                            UserType = 199
                        },
                        new
                        {
                            Id = "4F75BBA1-1CDF-44A7-84DF-D0C617E5E19D",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c911e855-7c66-4394-9f9a-d37e7da2eb16",
                            Email = "test2@msfsaddonshub.com",
                            EmailConfirmed = true,
                            FirstName = "The",
                            LastName = "Dr",
                            LockoutEnabled = false,
                            NormalizedEmail = "test2@msfsaddonshub.com",
                            NormalizedUserName = "test2@msfsaddonshub.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEJsw4kPpMKrv5ZPJoc2rx5z9R7yFQla352HGszeV4B+nbq1oltd8l+fcthdZUnfzxg==",
                            PhoneNumber = "XXXXXXXXXXXXX",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "00000000-0000-0000-0000-000000000000",
                            TwoFactorEnabled = false,
                            UserName = "test2@msfsaddonshub.com",
                            UserType = 199
                        });
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<Guid?>("TeannatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan?>("BanPeriod")
                        .HasColumnType("time");

                    b.Property<DateTimeOffset?>("BannedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("ClubDislikes")
                        .HasColumnType("int");

                    b.Property<Guid?>("ClubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int?>("ClubLikes")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("GpdrRemoveRequestDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MembersCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TeannatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ThumbNail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isBanned")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("isGpdrRemoveRequest")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.ClubDownloads", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("ClubId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FileId")
                        .HasColumnType("int");

                    b.Property<int?>("FlightId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TeannatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.ToTable("ClubsDownloads");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.ClubInvites", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("ClubId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DateUserAccepted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExpiresHours")
                        .HasColumnType("int");

                    b.Property<Guid?>("From")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FromEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("TeannatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("To")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ToEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFromId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserToId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.Property<bool?>("hasUserAccepted")
                        .HasColumnType("bit");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("UserFromId");

                    b.HasIndex("UserToId");

                    b.ToTable("ClubInvites");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.ClubMembers", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BannedEndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BannedStartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ClubId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MemeberOfClub")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isBanned")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("ClubMembers");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.Credits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TeannatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Teir")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isAdmin")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Credits");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.FileFolders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConflictId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddressBytes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TeannatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ThumbNail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThumbNailPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDisplayHomePage")
                        .HasColumnType("bit");

                    b.Property<bool?>("isFeatured")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("FileFolders");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.FileManger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConflictId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DownloadJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DownloadLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DownloadUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtensionIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FoldersId")
                        .HasColumnType("int");

                    b.Property<string>("HttpDownloadUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddressBytes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrignalFilename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TeannatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ThumbNail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThumbNailPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalDownloads")
                        .HasColumnType("int");

                    b.Property<int?>("UploadServiceType")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("canBeDownloadedByOtherUsers")
                        .HasColumnType("bit");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDisplayHomePage")
                        .HasColumnType("bit");

                    b.Property<bool?>("isFeatured")
                        .HasColumnType("bit");

                    b.Property<bool?>("isJsonFile")
                        .HasColumnType("bit");

                    b.Property<bool?>("isZipFile")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FoldersId");

                    b.ToTable("FileManager");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClubId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestAirportCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan?>("EndTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("FlightDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FlightDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlightPlanUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlightPlanXML")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartAirportCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("StartTime")
                        .HasColumnType("time");

                    b.Property<Guid?>("TeannatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ThumbNail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeInFluent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TimeinMins")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.FlightRoutes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AirportName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClubId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FlightId")
                        .HasColumnType("int");

                    b.Property<string>("ICAOCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TeannatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ThumbNail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Version")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("FlightsRoutes");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.FriendRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("ClubId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FreindRequestedIdId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FriendIdId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequestedIp")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("TeannatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("hasAccepted")
                        .HasColumnType("bit");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isBlocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FreindRequestedIdId");

                    b.HasIndex("FriendIdId");

                    b.ToTable("FriendsRequest");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.Friends", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("ClubId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FriendIdId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequestedIp")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("TeannatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("hasExcepted")
                        .HasColumnType("bit");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isBlocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FriendIdId");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.MyAddon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddonCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("AddonType")
                        .HasColumnType("int");

                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<int?>("ConflictId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DownloadJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DownloadUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FlightId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TeannatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ThumbNail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalDownloads")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDisplayHomePage")
                        .HasColumnType("bit");

                    b.Property<bool?>("isFeatured")
                        .HasColumnType("bit");

                    b.Property<bool?>("isJsonFile")
                        .HasColumnType("bit");

                    b.Property<bool?>("isZipFile")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AddonCategoryId");

                    b.HasIndex("FlightId");

                    b.ToTable("UserAddons");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.MyDashBoard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutMe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClubId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DownloadCount")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FollowingClubsCount")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("GpdrRemoveRequestDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LikedFilesCount")
                        .HasColumnType("int");

                    b.Property<Guid?>("TeannatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserScreenName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("isGpdrRemoveRequest")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("MyDashBoard");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.Subscriber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GPDRReqestDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("GpdrRemoval")
                        .HasColumnType("bit");

                    b.Property<Guid?>("TeannatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Subscriber");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.UserSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ChatOnOff")
                        .HasColumnType("bit");

                    b.Property<int>("ColorTheme")
                        .HasColumnType("int");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<bool?>("EmailNotificaitons")
                        .HasColumnType("bit");

                    b.Property<int>("FontSize")
                        .HasColumnType("int");

                    b.Property<int>("Langague")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "4b1b831c-61ac-46b9-88f5-089a11f1e46e",
                            ConcurrencyStamp = "1452e136-cadb-418d-99a6-b613814b941e",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "40ff2868-3264-4195-82c4-68bddcc5b036",
                            ConcurrencyStamp = "db6de142-a6b1-4dcb-b699-e994ddf69252",
                            Name = "ClubSuperAdmin",
                            NormalizedName = "SUPERADMIN"
                        },
                        new
                        {
                            Id = "2924519a-7024-417f-a8e1-335dca7dba63",
                            ConcurrencyStamp = "a0d8b8ca-1266-4b8b-8245-e15607db45f7",
                            Name = "ClubMod",
                            NormalizedName = "CLUBMOD"
                        },
                        new
                        {
                            Id = "3f6e4213-d513-47ae-8e02-dcdeaa4e22c9",
                            ConcurrencyStamp = "e6389086-1476-4076-9f28-52eea3af84f8",
                            Name = "ClubUser",
                            NormalizedName = "CLUBUSER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("MSFSAddons.Models.Badges", b =>
                {
                    b.HasOne("MSFSAddonsHub.Dal.Models.ApplicationUser", null)
                        .WithMany("Badges")
                        .HasForeignKey("ApplicationUserId");
                });

            modelBuilder.Entity("MSFSAddons.Models.Notifications", b =>
                {
                    b.HasOne("MSFSAddonsHub.Dal.Models.ApplicationUser", null)
                        .WithMany("Notifications")
                        .HasForeignKey("ApplicationUserId");
                });

            modelBuilder.Entity("MSFSAddons.Models.SubscriptionTeirs", b =>
                {
                    b.HasOne("MSFSAddonsHub.Dal.Models.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId");

                    b.HasOne("MSFSAddons.Models.SubscriptionTierTypes", "SubscriptionTeirsType")
                        .WithMany()
                        .HasForeignKey("SubscriptionTeirsTypeId");

                    b.HasOne("MSFSAddons.Models.SubscriptionTypesBalances", "SubscriptionTypesBalances")
                        .WithMany()
                        .HasForeignKey("SubscriptionTypesBalancesId");

                    b.HasOne("MSFSAddonsHub.Dal.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Club");

                    b.Navigation("SubscriptionTeirsType");

                    b.Navigation("SubscriptionTypesBalances");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MSFSAddons.Models.SubscriptionTierTypes", b =>
                {
                    b.HasOne("MSFSAddonsHub.Dal.Models.ApplicationUser", "UserId")
                        .WithMany()
                        .HasForeignKey("UserIdId");

                    b.Navigation("UserId");
                });

            modelBuilder.Entity("MSFSAddons.Models.SubscriptionTypesBalances", b =>
                {
                    b.HasOne("MSFSAddonsHub.Dal.Models.ApplicationUser", "UserId")
                        .WithMany()
                        .HasForeignKey("UserIdId");

                    b.Navigation("UserId");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.ClubDownloads", b =>
                {
                    b.HasOne("MSFSAddonsHub.Dal.Models.FileManger", "File")
                        .WithMany()
                        .HasForeignKey("FileId");

                    b.Navigation("File");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.ClubInvites", b =>
                {
                    b.HasOne("MSFSAddonsHub.Dal.Models.ApplicationUser", "UserFrom")
                        .WithMany()
                        .HasForeignKey("UserFromId");

                    b.HasOne("MSFSAddonsHub.Dal.Models.ApplicationUser", "UserTo")
                        .WithMany()
                        .HasForeignKey("UserToId");

                    b.Navigation("UserFrom");

                    b.Navigation("UserTo");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.ClubMembers", b =>
                {
                    b.HasOne("MSFSAddonsHub.Dal.Models.Club", "Club")
                        .WithMany("ClubUsers")
                        .HasForeignKey("ClubId");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("MSFSAddonsHub.Dal.Models.ApplicationUser", "User")
                        .WithMany("ClubUsers")
                        .HasForeignKey("UserId");

                    b.Navigation("Club");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.FileManger", b =>
                {
                    b.HasOne("MSFSAddonsHub.Dal.Models.FileFolders", "Folders")
                        .WithMany()
                        .HasForeignKey("FoldersId");

                    b.Navigation("Folders");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.Flight", b =>
                {
                    b.HasOne("MSFSAddonsHub.Dal.Models.Club", null)
                        .WithMany("Flights")
                        .HasForeignKey("ClubId");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.FlightRoutes", b =>
                {
                    b.HasOne("MSFSAddonsHub.Dal.Models.Flight", null)
                        .WithMany("FlightRoutes")
                        .HasForeignKey("FlightId");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.FriendRequest", b =>
                {
                    b.HasOne("MSFSAddonsHub.Dal.Models.ApplicationUser", "FreindRequestedId")
                        .WithMany()
                        .HasForeignKey("FreindRequestedIdId");

                    b.HasOne("MSFSAddonsHub.Dal.Models.ApplicationUser", "FriendId")
                        .WithMany()
                        .HasForeignKey("FriendIdId");

                    b.Navigation("FreindRequestedId");

                    b.Navigation("FriendId");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.Friends", b =>
                {
                    b.HasOne("MSFSAddonsHub.Dal.Models.ApplicationUser", "FriendId")
                        .WithMany()
                        .HasForeignKey("FriendIdId");

                    b.Navigation("FriendId");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.MyAddon", b =>
                {
                    b.HasOne("MSFSAddonsHub.Dal.Models.Category", "AddonCategory")
                        .WithMany()
                        .HasForeignKey("AddonCategoryId");

                    b.HasOne("MSFSAddonsHub.Dal.Models.Flight", null)
                        .WithMany("Addons")
                        .HasForeignKey("FlightId");

                    b.Navigation("AddonCategory");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MSFSAddonsHub.Dal.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MSFSAddonsHub.Dal.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSFSAddonsHub.Dal.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MSFSAddonsHub.Dal.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.ApplicationUser", b =>
                {
                    b.Navigation("Badges");

                    b.Navigation("ClubUsers");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.Club", b =>
                {
                    b.Navigation("ClubUsers");

                    b.Navigation("Flights");
                });

            modelBuilder.Entity("MSFSAddonsHub.Dal.Models.Flight", b =>
                {
                    b.Navigation("Addons");

                    b.Navigation("FlightRoutes");
                });
#pragma warning restore 612, 618
        }
    }
}
